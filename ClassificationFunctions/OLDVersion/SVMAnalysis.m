function [ACC, C] = SVMAnalysis(SubjStats)

%% Form up the feature matrix for machine learning algorithm
TRAIN_Y={'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'CONT','CONT','CONT','CONT',...
    'CONT','CONT','CONT','CONT',...
    'CONT','CONT','CONT','CONT',...
    'CONT','CONT','CONT','CONT'}';

weighttaskcont=[0.3*ones(32,1); 0.6*ones(16,1)];

TRAIN_X=[];
for i=1:12
    TRAIN_X=[TRAIN_X; SubjStats(i).beta(1:end/4)'; SubjStats(i).beta(end/4+1:end/2)'; SubjStats(i).beta(end/2+1:3*end/4)'; SubjStats(i).beta(3*end/4+1:end)'];
end
mdl=fitcsvm(TRAIN_X,TRAIN_Y,'Weights',weighttaskcont);

TEST_Y={'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'TASK','TASK','TASK','TASK',...
    'CONT','CONT','CONT','CONT',...
    'CONT','CONT','CONT','CONT',...
    'CONT','CONT','CONT','CONT',...
    'CONT','CONT','CONT','CONT'}';
TEST_X=[];
for i=13:24
    TEST_X=[TEST_X; SubjStats(i).beta(1:end/4)'; SubjStats(i).beta(end/4+1:end/2)'; SubjStats(i).beta(end/2+1:3*end/4)'; SubjStats(i).beta(3*end/4+1:end)'];
end

% Stardadize 
PREDICT_Y=predict(mdl,TEST_X);



%% Calculate the ACC and Confusion matrix
C=confusionmat(PREDICT_Y,TEST_Y);
ACC=trace(C)/length(TEST_Y);

end

